datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model User {
  id            String   @id @default(uuid())
  name          String?
  email         String   @unique
  password      String
  firstName     String?
  lastName      String?
  company       String?
  position      String?
  phone1        String?
  phone2        String?
  email2        String?
  street1       String?
  street2       String?
  zipCode       String?
  city          String?
  state         String?
  country       String?
  bio           String?
  image         String?  @db.LongText
  facebook      String?  // Facebook URL
  instagram     String?  // Instagram URL
  linkedin      String?  // LinkedIn URL
  twitter       String?  // Twitter (X) URL
  tiktok        String?  // TikTok URL
  googleReview  String?  // Google Review URL
  revolut       String?  // Revolut Username
  website       String?  // Website URL
  viber         String?  // Viber Phone Number
  whatsapp      String?  // WhatsApp Phone Number
  github        String?  // GitHub URL
  behance       String?  // Behance URL
  youtube       String?
  paypal        String?  // PayPal URL
  trustpilot    String?  // TrustPilot URL
  
  telegram      String?  // TrustPilot URL
  calendly      String?  // TrustPilot URL
  discord       String?  // TrustPilot URL
  tripadvisor   String?

  qrCode        String?  @db.Text
  selectedColor String?  // Selected color
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

}
 
model Contact {
  id            Int      @id @default(autoincrement())
  name          String
  email         String
  phone         String?
  subject       String?
  sendedOn      DateTime @default(now())
}

model Product {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  price       Float
  oldPrice Float?
  image       String   @db.LongText // Update the type to TEXT or LONGTEXT
  frontImage  String?  @db.LongText // Optional front image
  backImage   String?  @db.LongText // Optional back image
  type     String

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model CardDesign {
  id          Int      @id @default(autoincrement())
  cardName    String
  cardTitle   String
  userName    String
  userPhone   String
  userEmail   String
  frontDataUrl String  @db.LongText // Store base64-encoded image or URLs if needed
  backDataUrl  String  @db.LongText // Store base64-encoded image or URLs if needed
  backLogoUrl  String?  @db.LongText // Store base64-encoded image or URLs if needed
  courierAddress	String?
  courierIsSpeedy	Int
  createdAt   DateTime @default(now())
}
